AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ty-resume

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: python3.12
    Architectures:
      - x86_64
    LoggingConfig:
      LogFormat: JSON

Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: tylerb-resume-site
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z086927715F41H1R6IVT3
      RecordSets:
        - Name: tycloudresume.com
          Type: A
          AliasTarget: 
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: tycloudresume.com
      ValidationMethod: DNS

  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only
        Aliases: 
          - tycloudresume.com
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: tylerb-resume-site
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: !GetAtt MyWebsite.DomainName
            Id: tylerb-resume-site
            S3OriginConfig: {}
        Enabled: true
        DefaultRootObject: index.html

  MyWebsitePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyWebsite
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${MyWebsite}/*'

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: "Tyler's Resume API"
          version: "1.0"
        paths:
          /get:
            get:
              summary: "Get visitor count"
              operationId: "GetVisitorCount"
              produces:
                - application/json
              parameters:
                - name: Content-Type
                  in: header
                  required: true
                  type: string
              responses:
                '200':
                  description: "Successful response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                type: aws
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunction.Arn}/invocations
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: 'method.request.header.Content-Type'
                requestTemplates:
                  application/json: |
                    {
                      "statusCode": 200,
                      "body": $input.json('$.body')
                    }

                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
                    responseTemplates:
                      application/json:  |
                        {
                        "statusCode": 200,
                        "body": $input.json('$.body')
                        }
                        
            options:
              summary: "CORS support"
              responses:
                '200':
                  description: "CORS support"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                      default: "'https://tycloudresume.com'"
                    Access-Control-Allow-Methods:
                      type: string
                      default: "'OPTIONS,POST,GET,PUT'"
                    Access-Control-Allow-Headers:
                      type: string
                      default: "'Content-Type, Authorization'"
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: |
                    {
                      "statusCode": 200,
                      "body": $input.json('$.body')
                    }

                passthroughBehavior: when_no_templates
                contentHandling: CONVERT_TO_TEXT
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type, Authorization'"

          /put:
            put:
              summary: "Update visitor count"
              operationId: "UpdateVisitorCount"
              consumes:
                - application/json
              produces:
                - application/json
              parameters:
                - name: ID
                  in: query
                  required: true
                  type: string
                - name: Content-Type
                  in: header
                  required: true
                  type: string
              responses:
                '200':
                  description: "Successful response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                type: aws
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutFunction.Arn}/invocations
                httpMethod: POST
                requestParameters:
                  integration.request.querystring.ID: method.request.querystring.ID
                  integration.request.header.Content-Type: 'method.request.header.Content-Type'
                requestTemplates:
                  application/json:  |
                        {
                          "statusCode": 200,
                          "body": $input.json('$.body')
                        }

                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
                    responseTemplates:
                      application/json: |
                        {
                          "statusCode": 200,
                          "body": $input.json('$.body')
                        }

            options:
              summary: "CORS support"
              responses:
                '200':
                  description: "CORS support"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                      default: "'https://tycloudresume.com'"
                    Access-Control-Allow-Methods:
                      type: string
                      default: "'OPTIONS,POST,GET,PUT'"
                    Access-Control-Allow-Headers:
                      type: string
                      default: "'Content-Type,Authorization'"
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: |
                    {
                      "statusCode": 200,
                      "body": $input.json('$.body')
                    }

                passthroughBehavior: when_no_templates
                
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type, Authorization'"
                    responseTemplates:
                      application/json: |
                        {
                          "statusCode": 200,
                          "body": $input.json('$.body')
                        }


            

  ApiGatewayExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:  
              Service: apigateway.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ApiGatewayExecutionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt GetFunction.Arn
                  - !GetAtt PutFunction.Arn

  LambdaInvokePermissionGet:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt GetFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/GET/get"

  LambdaInvokePermissionPut: 
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PutFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/PUT/put"

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-function/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /get
            Method: GET

  PutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put-function/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: !GetAtt DynamoDBTable.Arn
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /put
            Method: PUT

Outputs:
  GetFunctionApi: 
    Description: API Gateway endpoint URL for Prod stage for Get function
    Value: !Sub "https://juop84rxae.execute-api.us-east-1.amazonaws.com/Prod/get"

  PutFunctionApi:
    Description: API Gateway endpoint URL for Prod stage for Put function
    Value: !Sub "https://juop84rxae.execute-api.us-east-1.amazonaws.com/Prod/put"

  GetFunctionArn:
    Description: ARN of the Get Lambda function
    Value: !GetAtt GetFunction.Arn

  PutFunctionArn:
    Description: ARN of the Put Lambda function
    Value: !GetAtt PutFunction.Arn
